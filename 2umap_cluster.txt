
library(Seurat)
library(dplyr)
library(ggplot2)
library(magrittr)
library(gtools)
library(stringr)
library(Matrix)
library(tidyverse)
library(patchwork)
library(data.table)
library(RColorBrewer)
library(ggpubr)

memory.limit(60000)
load('sce.RData')

sce <- RunPCA(sce, features = VariableFeatures(sce)) 
dimplot1 <- DimPlot(sce, reduction = "pca") 
elbowplot1 <- ElbowPlot(sce, ndims=50, reduction="pca") 
sc_pca <- dimplot1+elbowplot1
sc_pca
ggsave(filename = 'sc_pca.pdf',plot = sc_pca,he=10,wi=15)


VizDimLoadings(sce, dims = 1:2, nfeatures = 20, reduction = "pca")

DimHeatmap(sce, dims = 1:20,nfeatures = 20, cells = 500, balanced = TRUE)
dev.off()


Dims <- 40 
Resolution <- 0.1
sce <- FindNeighbors(object = sce, dims = 1:Dims)
sce <- FindClusters(object = sce, resolution = Resolution)

allcolour=c("#DC143C","#0000FF","#20B2AA","#FFA500","#9370DB","#98FB98","#F08080","#1E90FF","#7CFC00","#FFFF00",
            "#808000","#FF00FF","#CCCCFF","#000000","#7B68EE","#9400D3","#A0522D","#800080","#D2B48C","#D2691E",
            "#87CEEB","#40E0D0","#5F9EA0","#FF1493","#0000CD","#008B8B","#FFE4B5","#8A2BE2","#228B22","#E9967A",
            "#4682B4","#32CD32","#F0E68C","#FFFFE0","#EE82EE","#FF6347","#6A5ACD","#9932CC","#8B008B","#8B4513",
            "#DEB887")
length(table(sce@active.ident))
mycolor = allcolour[1:length(table(sce@active.ident))]

cluster.frequency.table <- sce@meta.data %>%
  dplyr::count(seurat_clusters) %>%
  dplyr::mutate(freq = n / sum(n)*100) %>%
  ungroup()%>%as.data.frame()
cluster.frequency.table

pie(cluster.frequency.table$n, labels=round(cluster.frequency.table$freq,2),radius=1.0, main = "Percentage of Cluster", col=mycolor)   
legend("right",legend=unique(cluster.frequency.table$seurat_clusters),bty="n",fill=mycolor)


cluster.frequency.sample=data.frame()
for (i in as.character(unique(sce@meta.data$Group1))){
  data1<-sce@meta.data[which(sce@meta.data$Group1==i),]
  dat1 <- data1 %>%
    dplyr::group_by(Group1) %>%
    dplyr::count(seurat_clusters) %>%
    dplyr::mutate(freq = n / sum(n)*100) %>%
    ungroup()%>%as.data.frame()
  cluster.frequency.sample=rbind(cluster.frequency.sample,dat1)
}
head(cluster.frequency.sample)
cluster.freq.sample<-tidyr::spread(data=cluster.frequency.sample[,c("Group1","seurat_clusters","freq")],
                                   key=Group1, value=freq)
cluster.freq.sample[is.na(cluster.freq.sample)]<-0
head(cluster.freq.sample)

cluster.freq<-ggplot(data=cluster.frequency.sample, mapping=aes(x=Group1,y=freq,fill=seurat_clusters))+
  geom_bar(stat='identity',width=0.9)+coord_polar(theta="y",start = 0)+
  theme_bw() +
  theme(panel.border = element_blank(),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        axis.line = element_blank())+
  scale_fill_manual(values=mycolor)
cluster.freq
pdf('cluster_freq.pdf',he=7,wi=9)
cluster.freq
dev.off()
write.csv(cluster.frequency.sample,file ="cluster.frequency.csv")





sce <- RunUMAP(sce, dims=1:Dims, reduction="pca")
sce <- RunTSNE(sce, 
               dims=1:Dims, 
               reduction="pca",
               perplexity=30,
               max_iter=1000)


sc_umap = DimPlot(sce,cols=mycolor,
                  reduction="umap", 
                  #reduction="tsne",
                  label = "T", 
                  pt.size = 0.2,
                  label.size = 5) +
  theme(axis.line = element_line(size=0.1, colour = "black"), 
        axis.ticks = element_blank()
  ) 
sc_umap
ggsave('sc_umap_cluster.pdf',sc_umap,he=7,wi=7)

sc_tsne = DimPlot(sce,cols=mycolor,
                  #reduction="umap",
                  reduction="tsne",
                  label = "T", 
                  pt.size = 0.2,
                  label.size = 5) +
  theme(axis.line = element_line(size=0.1, colour = "black"), 
        axis.ticks = element_blank()
  ) 
sc_tsne
ggsave('sc_tsne_cluster.pdf',sc_umap,he=7,wi=7)


sc_umap_group1 = DimPlot(sce,cols=mycolor,group.by='Sample',
                         reduction="umap",
                         label = "T", 
                         pt.size = 0.2,
                         label.size = 0) +
  theme(axis.line = element_line(size=0.1, colour = "black"), 
        axis.ticks = element_blank()
  ) 

sc_umap_group1
ggsave('sc_umap_sample.pdf',sc_umap_group1,he=7,wi=7)

sc_umap_group2 = DimPlot(sce,cols=mycolor,group.by='Group1',
                         reduction="umap",
                         label = "T", 
                         pt.size = 0.2,
                         label.size = 0) +
  theme(axis.line = element_line(size=0.1, colour = "black"), 
        axis.ticks = element_blank()
  ) 

sc_umap_group2
ggsave('sc_umap_group.pdf',sc_umap_group2,he=7,wi=7)




Logfc = 0.25

Minpct = 0.25
DefaultAssay(sce) <- "RNA"
sce.markers <- FindAllMarkers(object = sce,logfc.threshold = Logfc, 
                              min.pct = Minpct,only.pos = T)#FindAllMarkers :该函数默认对所有的cluster鉴定marker gene
sce.markers["pct.diff"]=sce.markers$pct.1-sce.markers$pct.2
sce.markers <- sce.markers[sce.markers$p_val_adj<0.05,]
length(unique(sce.markers$gene))
head(sce.markers)

write.table(sce.markers,'scRNA_marker_gene.txt',quote = F,row.names = F,sep='\t')


Top5 <- sce.markers %>% 
  group_by(cluster) %>% 
  slice_max(n =5, order_by = avg_log2FC)  
Top5 <- unique(Top5$gene)

sc_marker_dotplot <- DotPlot(object = sce, 
                             features = Top5,
                             cols=c("blue", "red"),
                             scale = T)+ 
  RotatedAxis()+ ggtitle("Top 5 Marker Genes")+ 
  theme(plot.title = element_text(hjust = 0.5)) 

sc_marker_dotplot
ggsave(filename = 'sc_marker_dotplot.pdf',
       plot = sc_marker_dotplot,
       height = 9,width = 25)

library(viridisLite)
sc_marker_heatmap<- DoHeatmap(object = sce,
                              features = Top5,
                              group.colors = mycolor,
                              label = F) + 
  ggtitle("Top 5 Marker Genes") + 
  theme(plot.title = element_text(hjust = 0.5)) 
sc_marker_heatmap
ggsave(filename = 'sc_marker_heatmap.pdf',
       plot = sc_marker_heatmap,
       width = 12,height = 12)

save(sce,file = 'sce2.RData')




